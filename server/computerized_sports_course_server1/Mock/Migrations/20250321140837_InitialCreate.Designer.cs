// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mock;

#nullable disable

namespace Mock.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250321140837_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repository.Entities.CategoryExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FitnessExerciseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FitnessExerciseId");

                    b.ToTable("CategoryExercises");
                });

            modelBuilder.Entity("Repository.Entities.CategoryFitness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryFitnesses");
                });

            modelBuilder.Entity("Repository.Entities.CategoryTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryFitnessId")
                        .HasColumnType("int");

                    b.Property<int>("FitnessTrackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryFitnessId");

                    b.HasIndex("FitnessTrackId");

                    b.ToTable("CategoryTracks");
                });

            modelBuilder.Entity("Repository.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Repository.Entities.FitnessExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EndingAge")
                        .HasColumnType("int");

                    b.Property<string>("Gif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartingAge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FitnessExercises");
                });

            modelBuilder.Entity("Repository.Entities.FitnessTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("FitnessTracks");
                });

            modelBuilder.Entity("Repository.Entities.TrackExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FitnessExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FitnessExerciseId");

                    b.HasIndex("TrackId");

                    b.ToTable("TrackExercises");
                });

            modelBuilder.Entity("Repository.Entities.CategoryExercise", b =>
                {
                    b.HasOne("Repository.Entities.CategoryFitness", "CategoryFitness")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Entities.FitnessExercise", "FitnessExercise")
                        .WithMany()
                        .HasForeignKey("FitnessExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryFitness");

                    b.Navigation("FitnessExercise");
                });

            modelBuilder.Entity("Repository.Entities.CategoryTrack", b =>
                {
                    b.HasOne("Repository.Entities.CategoryFitness", "CategoryFitness")
                        .WithMany()
                        .HasForeignKey("CategoryFitnessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Entities.FitnessTrack", "FitnessTrack")
                        .WithMany()
                        .HasForeignKey("FitnessTrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryFitness");

                    b.Navigation("FitnessTrack");
                });

            modelBuilder.Entity("Repository.Entities.FitnessTrack", b =>
                {
                    b.HasOne("Repository.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Repository.Entities.TrackExercise", b =>
                {
                    b.HasOne("Repository.Entities.FitnessExercise", "FitnessExercise")
                        .WithMany()
                        .HasForeignKey("FitnessExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Entities.FitnessTrack", "FitnessTrack")
                        .WithMany("TrackExercises")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FitnessExercise");

                    b.Navigation("FitnessTrack");
                });

            modelBuilder.Entity("Repository.Entities.FitnessTrack", b =>
                {
                    b.Navigation("TrackExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
